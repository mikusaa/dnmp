# 举个栗子，如果你使用的是 Typecho，并把程序放在了 blog，那么在生成证书并安装后，只需批量替换 xxx.com 为你自己的域名，这份配置就可以直接用了

server {
    listen 80;
    # 假设你的域名为 xxx.com，同时使用 xxx.com 和 www.xxx.com
    server_name www.xxx.com xxx.com;
    # 强制使用 https，需要进行一次301跳转，跳转至 www.xxx.com
    return 301 https://www.xxx.com$request_uri;
}
server {
    listen 443 ssl;
    # 若需使用quic，取消下面的注释
    # listen 443 quic;
    server_name www.xxx.com xxx.com;
    # 将 xxx.com 301 跳转至 www.xxx.com
    if ($host = 'xxx.com') {
        return 301 https://www.xxx.com$request_uri;
    }
    # 目录为 blog
    root /home/wwwroot/blog;
    index index.php index.html;
    # 启用 SSL
    ## 这里是你存放证书的位置，比如放在 ssl 文件夹中
    ssl_certificate_key ssl/xxx.com/xxx.com.key;
    ssl_certificate ssl/xxx.com/fullchain.cer;
    ## 使用通用的 SSL 配置
    include ssl/ssl.conf;
    ## 如需使用 QUIC，请取消下面配置的注释
    # include ssl/quic.conf; 
    ## 博客程序为 Typecho 的话，启用 php，同时建议启用伪静态
    include rewrite/typecho.conf; #伪静态，后需在 Typecho 设置中开启该功能
    include rewrite/enable-php-pathinfo.conf; #启用 php-pathinfo

    # 一些可能有用的缓存配置
    location ~ .*\.(js|css)?$ {
        expires 12h;
    }

    location ~ /.well-known {
        allow all;
    }

    location ~ /\. {
        deny all;
    }
    # 启用nginx访问日志
    access_log /home/wwwlogs/xxx.com.log;
}

# 没了